x = c(4, TRUE)
x
class(x)
x <- 1:20
x
x <- 1:2:20
clear
cls
clc
clean
cls
cls()
clear()
x <- c(1, 3, 5)
y <- c(3, 2, 10)
rbind(x, y)
z <- list(2, "a", "b", TRUE)
z
x[[1]]
class(x[[1]])
x[1]
class(z[[1]])
z[[1]]
z[1]
1:4 + 2
c("a", TRUE)
c("a", 123)
c(15, "a")
x <- x(3, 5, 1, 10, 12, 6)
x <- c(3, 5, 1, 10, 12, 6)
y <- x
y[x<6] <- 0
y
x<6
vCsvData = read.csv("hw1_data.csv")
names(vCsvData)
vCsvData[1:2]
data <- read.csv("hw1_data.csv")
data
length(data)
nrow(data)
data["Ozone"]
data["Ozone"][47]
data["Ozone"]["47"]
ozone <- data["Ozone"]
sum(ozone == NA)
ozone <- ozone[ozone != NA]
View(data)
ozone <- 0
x <- list(foo = 1:4, bar = 3)
x
x[1]
x[2]
x$foo
x[[1]]
x$2
x$1
class(data)
data.class
data["Ozone"]
data["Ozone"][1:2,]
data["Ozone"]
data[1:2,]
nrow(data)
data[152:153,]
data["Ozone"][47,]
data["Ozone"][47]
data["Ozone"][47,]
is.na(data)
is.na(data["Ozone"])
sum(is.na(data["Ozone"]))
ozone <- data[["Ozone"]]
cleanOzone <- ozone[!is.na(ozone)]
mean(cleanOzone)
TRUE & FALSE
TRUE && FALSE
TRUE | FALSE
TRUE || FALSE
2 & 0
2 & 1
2 && 1
2 > 0 && 1 < 0
2 > 0 & 1 < 0
data[data[["Ozone"]] > 31 && data[["Temp"]] > 90]
data[["Ozone"]] > 31
goodData <- complete.cases(data)
goodData <- data[complete.cases(data), ][,]
View(goodData)
filter1 <- data[!is.na(data["Ozone"]) || !is.na(data["Temp"]) || !is.na(data["Solar.R"])]
View(filter1)
!is.na(data["Ozone"]) || !is.na(data["Temp"]) || !is.na(data["Solar.R"])
filter1 <- data[!is.na(data["Ozone"]) || !is.na(data["Temp"]) || !is.na(data["Solar.R"]),]
goodData["Solar.R"]
mean(goodData["Solar.R"])
mean(goodData[["Solar.R"]])
goodData[goodData["Month"] == 6,]
goodData[goodData["Month"] == 6,][1]
goodData[goodData["Month"] == 6,][4]
mean(goodData[goodData["Month"] == 6,][4])
mean(goodData[goodData["Month"] == 6,][,4])
goodData[goodData["Month"] == 6,][,4]
max(goodData[goodData["Month"] == 5,][,1])
ozoneFilter <- data[data["Ozone"] > 31][1,]
ozoneFilter <- data[data["Ozone"] > 31][,1]
ozoneFilter <- data[data["Ozone"] > 31,][,1]
ozo
ozoneFilter
ozoneFilter <- data[data["Ozone"],][,1]
ozoneFilter <- data["Ozone",][,1]
ozoneFilter <- data["Ozone"][,1]
ozoneFilter
ozoneFilter > 31
c(TRUE, FALSE) && c(FALSE, TRUE)
c(TRUE, FALSE) & c(FALSE, TRUE)
ozoneFilter <- ozoneFilter > 31
data[["Ozone"]]
tempFilter <- data[["Temp"]] > 90
filter <- ozoneFilter & tempFilter
mean(data[["Solar.R"]][[filter]])
data[["Solar.R"]][[filter]]
data[["Solar.R"]][filter]
mean(data[["Solar.R"]][filter])
mean(data[["Solar.R"]][filter & !is.na(data[["Solar.R"]])])
solarFilter <- !is.na(data[["Solar.R"]])
filter <- ozoneFilter & tempFilter & solarFilter
mean(data[["Solar.R"]][filter])
filter <- ozoneFilter & tempFilter
results <- data[["Solar.R"]][filter]
results
results[!is.na(results)]
mean(results[!is.na(results)])
cube <- function(x, n) { x^3 }
cube(3)
x <- 1:10
if (x > 5) { x <- 0 }
x[1] <- 6
if (x > 5) { x <- 0 }
if (x > c(5, 5, 5, 5, 5, 5, 5, 5, 5, 5)) { x <- 10 }
x <- 1:10
if (x > c(5, 5, 5, 5, 5, 5, 5, 5, 5, 5)) { x <- 10 }
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
install.packages("swirl")
library("swirl", lib.loc="C:/Users/LCDMFB/Documents/R/win-library/3.0")
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z,555)
c(z,555,z)
z*2 + 100
mySqrt <- sqrt(z - 1)
mySqrt
myDiv <- z / mySqrt
myDiv
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
1:20
pi:10
15:1
?`:`
seq(1, 20)
seq(0, 10, by = 0.5)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse=" ")
my_name <- c(my_char, "Luiz")
my_name
paste(my_name, collapse=" ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
myData <- sample(c(y, z), 100)
myNA <- is.NA(myData)
myNA <- is.na(myData)
myNA
myData == NA
sum(myNA)
myData
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
myVector <- 1:20
myVector
dim(myVector)
length(myVector)
dim(myVector) <- c(4,5)
dim(myVector)
attributes(myVector)
myVector
class(myVector)
myMatrix <- myVector
?matrix
myMatrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(myMatrix, myMatrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, myMatrix)
myData <- data.frame(patients, myMatrix)
myData
class(myData)
cnames <- c("patient", "age", "weight", "bp", "rating" "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(myData) <- cnames
myData
detach("package:swirl", unload=TRUE)
setwd("E:/Work/GitHub/Coursera---R-Programming/Assignment 1")
x<<-2
x<-3
source('E:/Work/GitHub/ProgrammingAssignment2/cachematrix.R')
A <- numeric(2,2)
A <- matrix(c(1,2,2,1), 2, 2)
A
solve(A)
sA <- makeCacheMatrix(A)
cacheSolve(sA)
cacheSolve(sA)
identical(solve(A), cacheSolve(sA))
cacheSolve(A)
source('E:/Work/GitHub/ProgrammingAssignment2/cachematrix.R')
set.seed(1)
rpois(5, 2)
qpois
set.seed(10)
x<-rbinom(10,10,0.5)
e <- rnorm(10, 0, 2)
y <- 0.5 + 2*x + e
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
pwd
pwd()
setwd("E:/Work/GitHub/Coursera---R-Programming/Assignment 3")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
View(outcome)
outcome$State
"TX" in outcome$State
"TX" %in% outcome$State
names(outcome)
names(outcome)[11:30]
names(outcome)[11:46]
"TX" %in% outcome$State
"TX2" %in% outcome$State
outcome$State
"tx" %in% outcome$State
"teste" != "test"
"teste" != "teste"
"teste" != "teste" && "teste" != "test"
"teste" != "teste" && "teste" != "teste"
"teste" == "teste" && "teste" != "test"
data[1]
data[[1]
]
data[[1]]
data[[]]
outcome[1]
min(c(1, 2, 0))
NA
outcome[[11]][outcome$State == "TX"]
outcome$Hospital.Name
outcome[[11]][outcome$State == "TX" & outcome[11] == "16.1" ]
outcome[[2]][outcome$State == "TX" & outcome[11] == "16.1" ]
complete.cases(outcome[[2]][outcome$State == "TX" & outcome[11] == "16.1" ])
outcome[[2]][outcome$State == "TX" & complete.cases(as.numeric(outcome[11])) == 16.1 ]
outcome[[2]][outcome$State == "TX" & as.numeric(outcome[11]) == 16.1 ]
outcome[[2]][outcome$State == "TX" & complete.cases(as.numeric(outcome[[11]])) == 16.1 ]
outcome[[2]][outcome$State == "TX" & as.numeric(outcome[[11]]) == 16.1 ]
complete.cases(outcome[[2]][outcome$State == "TX" & as.numeric(outcome[[11]]) == 16.1 ])
x<-complete.cases(outcome[[2]][outcome$State == "TX" & as.numeric(outcome[[11]]) == 16.1 ])
outcome[[2]][outcome$State == "TX" & as.numeric(outcome[[11]]) == 16.1 ][x]
teste = "heart attack"
dataColumn <- if (teste == "heart attack") { 11 } else if (teste == "heart failure") { 17 } else { 23 }
teste = "heart failure"
dataColumn <- if (teste == "heart attack") { 11 } else if (teste == "heart failure") { 17 } else { 23 }
teste = "pneumonia"
dataColumn <- if (teste == "heart attack") { 11 } else if (teste == "heart failure") { 17 } else { 23 }
outcome[[dataColumn]]
estado <- "TX"
resultado <- "heart attack"
dataColumn <- if(resultado == "heart attack") { 11 } else if(resultado == "heart failure") { 17 } else { 23 }
stateIndexes <- data$State == estado
stateIndexes <- outcome$State == estado
bestRate <- min(as.numeric(outcome[[dataColumn]][stateIndexes]))
bestRate
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state <- "TX"
outcome <- "heart attack"
dataColumn <- if(outcome == "heart attack") { 11 } else if(outcome == "heart failure") { 17 } else { 23 }
stateIndexes <- data$State == state
casesIndexes <- complete.cases(data[[dataColumn]][stateIndexes])
bestRate <- min(as.numeric(data[[dataColumn]][casesIndexes]))
as.numeric(data[[dataColumn]][casesIndexes])
identical(complete.cases(data[[dataColumn]][stateIndexes]) & !is.na(as.numeric(data[[dataColumn]])), !is.na(as.numeric(data[[dataColumn]])[stateIndexes])
complete.cases(data[[dataColumn]][stateIndexes]) & !is.na(as.numeric(data[[dataColumn]]))
identical(complete.cases(data[[dataColumn]][stateIndexes]) & !is.na(as.numeric(data[[dataColumn]])), !is.na(as.numeric(data[[dataColumn]])[stateIndexes]))
!is.na(as.numeric(data[[dataColumn]])
!is.na(as.numeric(data[[dataColumn]])
!is.na(as.numeric(data[[dataColumn]]))
!is.na(as.numeric(data[[dataColumn]][stateIndexes]))
casesIndexes <- !is.na(as.numeric(data[[dataColumn]][stateIndexes]))
bestRate <- min(as.numeric(data[[dataColumn]][casesIndexes]))
data[[dataColumn]][casesIndexes]
as.numeric(data[[dataColumn]][stateIndexes])
casesIndexes <- !is.na(as.numeric(data[[dataColumn]]))
as.numeric(data[[dataColumn]][casesIndexes & stateIndexes]
as.numeric(data[[dataColumn]][casesIndexes & stateIndexes])
min(as.numeric(data[[dataColumn]][casesIndexes & stateIndexes]))
bestRate <- min(as.numeric(data[[dataColumn]][stateIndexes & casesIndexes]))
ratesIndexes <- as.numeric(data[[dataColumn]]) == bestRate
sum(ratesIndexes & casesIndexes & stateIndexes)
orderedHospitals <- order(data$Hospital.Name)
head(orderedHospitals)
orderedHospitals
order(data$Hospital.Name)
data$Hospital.Name[orderedHospitals]
data$Hospital.Name[orderedHospitals][1:5]
source("best.R")
best("TX", "heart attack")
data[[Hospital.Name]][stateIndexes & casesIndexes & ratesIndexes]
best("TX", "heart attack")
source("best.R")
source('E:/Work/GitHub/Coursera---R-Programming/Assignment 3/best.R')
best("TX", "heart attack")
View(data)
best("TX", "heart attack")
best("TX", "heart attack")
state <- "TX"
outcome <- "heart attack"
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
dataColumn <- if(outcome == "heart attack") { 11 } else if(outcome == "heart failure") { 17 } else { 23 }
stateIndexes <- data$State == state
casesIndexes <- !is.na(as.numeric(data[[dataColumn]]))
bestRate <- min(as.numeric(data[[dataColumn]][stateIndexes & casesIndexes]))
ratesIndexes <- as.numeric(data[[dataColumn]]) == bestRate
data[[Hospital.Name]][stateIndexes & casesIndexes & ratesIndexes]
View(data)
data[[Hospital Name]][stateIndexes & casesIndexes & ratesIndexes]
data[["Hospital Name"]][stateIndexes & casesIndexes & ratesIndexes]
data[["Hospital.Name"]][stateIndexes & casesIndexes & ratesIndexes]
data$Hospital.Name[stateIndexes & casesIndexes & ratesIndexes]
source('E:/Work/GitHub/Coursera---R-Programming/Assignment 3/best.R')
best("TX", "heart attack")
!is.na(as.numeric(data[[dataColumn]]))
ratesIndexes <- as.numeric(data[[dataColumn]]) == bestRate
dataValues <- as.numeric(data[[dataColumn]])
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "heart attack")
best("NY", "hert attack")
stateIndexes <- data$State == state
casesIndexes <- !is.na(as.numeric(data[[dataColumn]]))
tempValues <- as.numeric(data[[dataColumn]][stateIndexes & casesIndexes])
sum(is.na(tempValues))
order(tempValues)
tempValues[order(tempValues)]
source('E:/Work/GitHub/Coursera---R-Programming/Assignment 3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
source('E:/Work/GitHub/Coursera---R-Programming/Assignment 3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
x <- c(1, 3, 2, NA)
order(x)
x[order(x)]
source('E:/Work/GitHub/Coursera---R-Programming/Assignment 3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
source('E:/Work/GitHub/Coursera---R-Programming/Assignment 3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
source('E:/Work/GitHub/Coursera---R-Programming/Assignment 3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
source('E:/Work/GitHub/Coursera---R-Programming/Assignment 3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
rankhospital("MD", "heart attack", "worst")
best("SC", "heart attack")
source('E:/Work/GitHub/Coursera---R-Programming/Assignment 3/rankhospital.R')
rankhospital("MD", "heart attack", "worst")
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state <- "MD"
outcome <- "heart attack"
num <- "worst"
dataColumn <- if(outcome == "heart attack") { 11 } else if(outcome == "heart failure") { 17 } else { 23 }
stateIndexes <- data$State == state
hospitalRank <- order(data$Hospital.Name[stateIndexes])
valueRank <- order(as.numeric(data[[dataColumn]][stateIndexes][hospitalRank]))
rbind(c(1,2,3),c(1,2,3))
cbind(c(1,2,3),c(1,2,3))
temp <- cbind(data$Hospital.Name[stateIndexes][hospitalRank][valueRank], data[[dataColumn]][stateIndexes][hospitalRank][valueRank], valueRank)
temp
stateIndexes <- data$State == state & !is.na(as.numeric(data[[dataColumn]]))
hospitalRank <- order(data$Hospital.Name[stateIndexes])
valueRank <- order(as.numeric(data[[dataColumn]][stateIndexes][hospitalRank]))
if (is.numeric(num))
{
rankHospital <- data$Hospital.Name[stateIndexes][hospitalRank][valueRank][num]
}
else if (num == "best")
{
rankHospital <- data$Hospital.Name[stateIndexes][hospitalRank][valueRank][1]
}
else if (num == "worst")
{
rankHospital <- data$Hospital.Name[stateIndexes][hospitalRank][valueRank]
}
else
{
rankHospital <- NA
}
rankHospital
source('E:/Work/GitHub/Coursera---R-Programming/Assignment 3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("MN", "heart attack", 5000)
rankhospital("MD", "heart attack", "worst")
source('E:/Work/GitHub/Coursera---R-Programming/Assignment 3/rankhospital.R')
rankhospital("MD", "heart attack", "worst")
valueRank[NA]
source('E:/Work/GitHub/Coursera---R-Programming/Assignment 3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("MN", "heart attack", 5000)
rankhospital("MD", "heart attack", "worst")
levels(data$States)
unique(data$States)
source('E:/Work/GitHub/Coursera---R-Programming/Assignment 3/rankhospital.R')
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
rankhospital("TX", "heart failure", 4)
source('E:/Work/GitHub/Coursera---R-Programming/Assignment 3/rankhospital.R')
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data$State
unique(data$States)
x <- data$State
unique(x)
source('E:/Work/GitHub/Coursera---R-Programming/Assignment 3/rankall.R')
source('E:/Work/GitHub/Coursera---R-Programming/Assignment 3/rankhospital.R')
source('E:/Work/GitHub/Coursera---R-Programming/Assignment 3/rankall.R')
head(rankall("heart attack", 20), 10)
source('E:/Work/GitHub/Coursera---R-Programming/Assignment 3/rankall.R')
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
